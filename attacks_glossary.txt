1. Cookie Injection - A type of web attack that involves injecting malicious code into a cookie. 
Cookies are small pieces of data that are stored in a user's web browser and are used to identify
the user and store information about their preferences and browsing history. 
By injecting malicious code into a cookie, an attacker can potentially gain access to sensitive information, 
such as login credentials or personal data, or perform actions on the user's behalf, such as making unauthorized transactions. 

2. Directory Traversal - Also known as "dot-dot-slash" or "../", is a type of attack in which 
an attacker attempts to access files and directories that are outside of the intended directory. 
This can be done by manipulating the directory path in the URL or by using certain characters, 
such as ".." or "%2e%2e", to access directories above the intended directory. 
These attacks can be used to gain access to sensitive information or to execute arbitrary code on the server.

3. Log4J - A Java-based logging utility used to output log statements from applications to various output targets. 
A Log4j attack, also known as a log injection attack, is a type of security vulnerability in which an attacker injects 
malicious data into a log file generated by a Log4j-enabled application. This can allow the attacker to gain 
unauthorized access to sensitive information, such as passwords or personal data, or to manipulate the log data in some way.

4. Log Forging - A type of cyber attack in which an attacker modifies or creates fake log entries in a system's log file 
in order to hide their tracks or to mislead system administrators. 
This can be done by adding false information to the log file, deleting relevant entries, 
or altering the timestamp of existing entries. 
Log forging can be used to cover up the activities of an attacker 
or to create the impression that a system has been compromised when it has not.

5. Remote Code Execution (RCE) - A type of security vulnerability that allows an attacker to execute arbitrary code on 
a targeted system or device. This can be done remotely, without the need for physical access to the system.

6. SQL injection - A type of security exploit in which an attacker injects malicious code
into a website's SQLstatement and gains unauthorized access to the database. 
This can allow the attacker to modify or delete data, or even gain access
to sensitive information such as passwords or personal data. 
SQL injection attacks are a common method used by hackers to gain access to websites and databases, 
and they can be especially dangerous if the website or application does not have proper input validation and sanitization. 
To prevent SQL injection attacks, it is important to use prepared statements and parameterized queries and to properly sanitize all user input.

7. Cross Site Scripting (XSS) - A type of security vulnerability that allows an attacker to inject malicious code into a website or web application. 
This can happen when the website or web application takes user input and displays it on the page without properly sanitizing it. 
The injected code can execute in the context of the website or web application, 
allowing the attacker to steal sensitive information such as login credentials, 
manipulate the website or web application, or perform other malicious actions. 
XSS attacks can be classified into two types: reflected and stored. 
A reflected XSS attack involves injecting malicious code into a website 
or web application via a URL, which is then reflected back to the user and executed by their browser. 
A stored XSS attack involves injecting malicious code into a website 
or web application and storing it in a persistent manner, such as in a database or file. 
This code is then executed by users who access the website or web application.
